public class Main {
    public Main() {
    }

    public static void main(String[] args) {
        Vetor lista = new Vetor();
        System.out.printf("Hello and welcome!");

        String[] nomes = {"João", "Maria", "Pedro", "Ana", "Carlos", "Laura", "Rafael", "Camila", "Mateus", "Juliana", "Lucas", "Gabriela", "Fernando", "Mariana", "Rodrigo"};

        for (String nome : nomes) {
            Aluno novoAluno = new Aluno();
            novoAluno.setNome(nome);
            lista.adiciona(novoAluno);


        }
        System.out.println("Total de alunos: " + lista.getTotalDeAlunos());
        System.out.println(lista);

    }

}
public class Vetor {
    private Aluno[] alunos = new Aluno[100];
    private int totalDeAlunos = 0;

    public Vetor() {
    }

    public void adiciona(Aluno aluno) {
        this.alunos[this.totalDeAlunos] = aluno;
        this.totalDeAlunos++;
    }

    public int getTotalDeAlunos() {
        return this.totalDeAlunos;
    }

    public void adicionaPosicao(int posicao, Aluno aluno) {
        if (posicao < 0 || posicao > this.totalDeAlunos) {
            throw new IllegalArgumentException("Posição inválida");
        }


        for (int i = this.totalDeAlunos; i > posicao; i--) {
            this.alunos[i] = this.alunos[i - 1];
        }

        this.alunos[posicao] = aluno;
        this.totalDeAlunos++;
    }

    public Aluno pega(int posicao) {
        if (!this.posicaoOcupada(posicao)) {
            throw new IllegalArgumentException("Posição inválida");
        }
        return this.alunos[posicao];
    }

    public void remove(int posicao) {
        if (!this.posicaoOcupada(posicao)) {
            throw new IllegalArgumentException("Posição inválida");
        }


        for (int i = posicao; i < this.totalDeAlunos - 1; i++) {
            this.alunos[i] = this.alunos[i + 1];
        }

        this.totalDeAlunos--;
    }

    public boolean contem(Aluno aluno) {
        for (int i = 0; i < this.totalDeAlunos; i++) {
            if (aluno.equals(this.alunos[i])) {
                return true;
            }
        }
        return false;
    }

    public int tamanho() {
        return this.totalDeAlunos;
    }

    public String toString() {
        if (this.totalDeAlunos == 0) {
            return "[]";
        } else {
            StringBuilder builder = new StringBuilder();
            builder.append("[");

            for (int i = 0; i < this.totalDeAlunos - 1; i++) {
                builder.append(this.alunos[i]);
                builder.append(", ");
            }

            builder.append(this.alunos[this.totalDeAlunos - 1]);
            builder.append("]");
            return builder.toString();
        }
    }

    private boolean posicaoOcupada(int posicao) {
        return posicao >= 0 && posicao < this.totalDeAlunos;
    }
}
public class Aluno {
    private String nome;

    public Aluno() {
    }

    public void setNome(String nome) {
        this.nome = nome;
    }

    public String getNome() {
        return this.nome;
    }

    public String toString() {
        return this.nome;
    }

    public boolean equals(Object o) {
        Aluno outro = (Aluno)o;
        return this.nome.equals(outro.nome);
    }
}
